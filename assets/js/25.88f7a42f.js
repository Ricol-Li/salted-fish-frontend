(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{429:function(t,v,l){"use strict";l.r(v);var _=l(35),i=Object(_.a)({},(function(){var t=this,v=t.$createElement,l=t._self._c||v;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"迭代器"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#迭代器"}},[t._v("#")]),t._v(" 迭代器")]),t._v(" "),l("div",{staticClass:"custom-block tip"},[l("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),l("p",[t._v("回顾下 ES6 新增的内容")]),t._v(" "),l("ul",[l("li",[t._v("Symbol/BigInt")]),t._v(" "),l("li",[t._v("let/const")]),t._v(" "),l("li",[t._v("ES6 Module 模块化规范（import export）")]),t._v(" "),l("li",[t._v("箭头函数")]),t._v(" "),l("li",[t._v("解构赋值")]),t._v(" "),l("li",[t._v("... 展开运算符、剩余参数")]),t._v(" "),l("li",[t._v("模板字符串")]),t._v(" "),l("li",[t._v("Promise")]),t._v(" "),l("li",[t._v("Proxy")]),t._v(" "),l("li",[t._v("Reflect")]),t._v(" "),l("li",[l("strong",[t._v("Iterator")])]),t._v(" "),l("li",[t._v("Generator")]),t._v(" "),l("li",[t._v("class")]),t._v(" "),l("li",[t._v("数组和对象新增的方法")])]),t._v(" "),l("p",[l("strong",[t._v("这一篇我们的重点的迭代器，它是一种机制，可以为各种不同的数据结构提供统一的循环和迭代规范，而 for of 循环本身就是基于这种进行迭代的！")])]),t._v(" "),l("ol",[l("li",[t._v("拥有 Iterator 机制的对象，必须具备 next 方法：执行这个方法可以一次访问对象中的每个成员")]),t._v(" "),l("li",[t._v("执行 next 方法返回值是一个对象\n"),l("ul",[l("li",[t._v("value:当前迭代的这一项")]),t._v(" "),l("li",[t._v("done:记录是否迭代完成")])])])])])])}),[],!1,null,null,null);v.default=i.exports}}]);